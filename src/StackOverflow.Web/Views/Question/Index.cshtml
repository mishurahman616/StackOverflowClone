@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    @using StackOverflow.Web.Models.QuestionModels;
    ViewData["Title"] = "Questions";
}
@model QuestionListModel

<div class="container question-list">
    <div class="question-list-heading"></div>
    <partial name="_ResponsePartial" />
    @foreach(var question in Model.Questions)
    {
        <div class="row my-3">
            <div class="col">
                <div class="card">
                    <div class="card-body d-flex">
                        <div class="col-1">

                            <div>
                                <a class="up-vote" data-id="@question.Id.ToString("N")" ><i class=" fa fa-caret-up fa-2x"></i></a>
                            </div>
                            <div>
                                <a class="down-vote" data-id="@question.Id.ToString("N")" ><i class="fa fa-caret-down fa-2x"></i></a>
                            </div>
                        </div>

                        <div class="col-11">
                            <b>
                                <a class="text-decoration-none" asp-action="Detials" asp-route-id="@question.Id.ToString("N")" asp-controller="Question">@question.Title</a>
                            </b>
                            <p>@question.Body</p>
                        </div>
                    </div>
                    <div class="card-footer d-flex justify-content-between">
                        <div class="mr-3">
                            Votes: <span class="vote-count-@question.Id.ToString("N")">@question.Votes?.Sum(vote => (int)vote.VoteType)</span>
                        </div>
                        <div class="mr-3">
                            Answers: @question.Answers?.Count()
                        </div>
                        <div>
                            Asked By: @(question.User != null ? question.User.FirstName : "")
                        </div>
                    </div>
                </div>        
            </div>
        </div>
    }
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            let loginMessage = 'To vote, you need to <a href="/Account/Login" class="alert-link">login</a>.';
            $(".up-vote").on("click", function (e) {
                let id = $(this).data('id')
                $.ajax({
                    url: '@Url.Action("UpdateVote", "Question")',
                    type: 'POST',
                    headers: {
                        'RequestVerificationToken': $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    data: {
                        questionId: $(this).data('id'),
                        voteType: "UpVote"
                    },
                    success: function (response) {
                        if (response === "NewVoteInserted") {
                            incrementVoteCount(id);
                            showVoteAlert(response, "success")
                        } 
                        else if (response === "VoteUpdated") {
                            incrementVoteCount(id);
                            incrementVoteCount(id);
                            showVoteAlert(response, "success")
                        } 
                        else if (response === "VoteRemoved") {
                            decrementVoteCount(id);
                            showVoteAlert(response, "success")
                        }
                    },
                    error: function (xhr, status, error) {
                        if (xhr.status === 401) {
                            // Unauthorized access
                            showVoteAlert(loginMessage, "danger")
                        } 
                        else {
                            // Other error,
                            console.error("Error: " + xhr.responseText);
                        }
                    }
                });
            });


            $(".down-vote").click(function (e) {
                let id = $(this).data('id')
                $.ajax({
                    url: '@Url.Action("UpdateVote", "Question")',
                    type: 'POST',
                    headers: {
                        'RequestVerificationToken': $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    data: {
                        questionId: $(this).data('id'),
                        voteType: "DownVote"
                    },
                    success: function (response) {
                        if (response === "NewVoteInserted") {
                            decrementVoteCount(id);
                            showVoteAlert(response, "success")
                        } 
                        else if (response === "VoteUpdated") {
                            decrementVoteCount(id);
                            decrementVoteCount(id);
                            showVoteAlert(response, "success")
                        } 
                        else if (response === "VoteRemoved") {
                            incrementVoteCount(id);
                            showVoteAlert(response, "success")
                        }
                    },
                    error: function (xhr, status, error) {
                        if (xhr.status === 401) {
                            // Unauthorized access
                            showVoteAlert(loginMessage, "danger")
                        } 
                        else {
                            // Other error
                            console.error("Error: " + xhr.responseText);
                        }
                    }
                });
            });

            function incrementVoteCount(id) {
                let voteCountElement = $(".vote-count-" + id);
                let currentCount = parseInt(voteCountElement.text());
                voteCountElement.text(currentCount + 1);
            }

            function decrementVoteCount(id) {
                let voteCountElement = $(".vote-count-" + id);
                let currentCount = parseInt(voteCountElement.text());
                voteCountElement.text(currentCount - 1);
            }

            function showVoteAlert(message, type) {
                // Create a Bootstrap danger alert
                var alertHtml = '<div class="alert alert-'+type+' alert-dismissible fade show" role="alert">' +
                    message +
                    '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">';

                // Append the alert to the body
                $('.question-list-heading').append(alertHtml);
            }
        });


    </script>
}