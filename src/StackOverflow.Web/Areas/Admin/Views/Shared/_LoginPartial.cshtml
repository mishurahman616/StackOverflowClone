@using StackOverflow.DAL.Membership.Entities
@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        @if(User.Claims.Any(x=>x.Type=="Admin"))
        {
            <li class="nav-item">
                <a id="manage" class="nav-link text-dark" asp-action="Index" asp-controller="Question" asp-area="Admin" title="Manage"> Admin Panel</a>
            </li>
        }
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-action="Index" asp-controller="Dashboard" title="Manage"> Dashboard</a>
    </li>
    <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-action="Index" asp-controller="Dashboard" title="Manage"> @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="" asp-action="Logout" asp-controller="Account" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-action="Register" asp-controller="Account">Register</a>
    </li>
    <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-action="Login" asp-controller="Account">Login</a>
    </li>
}
</ul>
